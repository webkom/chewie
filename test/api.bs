import should
import chai
import chai-spies as spies
import assert
import supertest as request

import ../app
import ../routes/api: messages
import ../deploy
import ./fixtures/github-push as ghPushFixture

expect = chai.expect
chai.use(spies)

describe('API', () ->
  describe('/github', () ->
    HASH = 'sha1=7876c938d38e99b954b3d839c7bafb343d29e776'
    HASH_WITH_PAYLOAD = 'sha1=afc5f9b9343a32bdb7c3c5357a9b5aeebe69ebd8'
    deploySpy = undefined
    beforeEach(() ->
      deploySpy = chai.spy(deploy)
    )
      

    it('should return 403 when auth fails', (done) ->
      request(app)
        .post('/api/github')
        .expect(403, done)
    )

    it('should return 200 when auth succeeds', (done) ->
      request(app)
        .post('/api/github')
        .set('x-hub-signature', HASH)
        .expect(200, done)
    )

    it('should not deploy if project is public', (done) ->
      request(app)
        .post('/api/github')
        .set('x-hub-signature', HASH_WITH_PAYLOAD)
        .send(ghPushFixture)
        .expect(200)
        .end((err, res) ->
          expect(err).to.be.null
          expect(res.text).to.equal('Received hook from a public project, which is handled by Travis. Nothing will be done.')
          expect(deploySpy).not.to.have.been.called
          done()
        )
    )
  )
)
